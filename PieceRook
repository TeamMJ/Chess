package Chess;

import java.io.File;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;

public class PieceRook extends Pieces{
	
	public PieceRook(int type) {
		super(type);
		
		if( type == 1){
			rook = new Image(new File("Chess/images/black_rook.png").toString(), area, area, false, false);
			Rook = new ImageView(rook);
			getChildren().addAll(Rook);
		}
		
		else if( type == 2){
			rook = new Image(new File("Chess/images/white_rook.png").toString(), area, area, false, false);
			Rook = new ImageView(rook);
			getChildren().addAll(Rook);
		}
	}
	
	public void move(int type, double x, double y, double x1, double y1){
		if(type == 1){
			//movement up & down, or left & right
			if(x < x1 || x > x1){
				//move up or down
				xx = x;
				yy = y1;
				
			}
			else if(y < y1 || y > y1){
				//move left or right
				yy = y;
				xx = x1;
				
			}
			else{}
			
			//set location
			x2 = xx;
			y2 = yy;
			relocate(yy, xx);
		}
		
		if(type == 2){
			//movement up & down, or left & right
			if(x < x1 || x > x1){
				//move up or down
				xx = x;
				yy = y1;
			}
			
			else if(y < y1 || y > y1){
				//move left or right
				yy = y;
				xx = x1;
			}
			else{}
			
			//set location
			x2 = yy;
			y2 = xx;
			relocate(xx, yy);
		}
		
	}
	
	public void capture(int x, int y){
		relocate(x*area*10, y*area*10);
	}
	
	public double newX(){
		return x2;
	}
	
	public double newY(){
		return y2;
	}
	
	// overridden version of the relocate method
	@Override
	public void relocate(double x, double y) {
		// call the superclass method and update the position
		super.relocate(x, y);
	}
	
	//private fields
	private Image rook;
	private ImageView Rook;
	private double area = 600/8;
	private double xx, yy;
	private double x2, y2;
}
